version: '3'

networks:
  rallibau-net:
    external: false

services:
  acl:
    container_name: rallibau-acl
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    entrypoint: [ "sh", "-c", "java $JAVA_OPTS -Denv=compose-local -jar app.jar acl server" ]
    ports:
      - "8081:8081"
    volumes:
      - .:/app:delegated
    env_file:
      - .env
    tty: true
    networks:
      - rallibau-net
  bpm:
    container_name: rallibau-bpm
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    entrypoint: [ "sh", "-c", "java $JAVA_OPTS -Denv=compose-local -jar app.jar bpm server" ]
    ports:
      - "8082:8081"
    volumes:
      - .:/app:delegated
    env_file:
      - .env
    tty: true
    networks:
      - rallibau-net
  cms:
    container_name: rallibau-cms
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    entrypoint: [ "sh", "-c", "java $JAVA_OPTS -Denv=compose-local -jar app.jar cms server" ]
    ports:
      - "8083:8081"
    volumes:
      - .:/app:delegated
    env_file:
      - .env
    tty: true
    networks:
      - rallibau-net

  schedule:
    container_name: rallibau-schedule
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    entrypoint: [ "sh", "-c", "java $JAVA_OPTS -Denv=compose-local -jar app.jar scheduler server" ]
    ports:
      - "8084:8081"
    volumes:
      - .:/app:delegated
    env_file:
      - .env
    tty: true
    networks:
      - rallibau-net

  mysql:
    container_name: rallibau-mysql
    image: mysql:8
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=secreto
      - MYSQL_ALLOW_EMPTY_PASSWORD=no
    entrypoint:
      sh -c "
      echo 'CREATE DATABASE IF NOT EXISTS bpm;' > /docker-entrypoint-initdb.d/init.sql;
      echo 'CREATE DATABASE IF NOT EXISTS schedule;' > /docker-entrypoint-initdb.d/init.sql;
      echo 'CREATE DATABASE IF NOT EXISTS acl;' > /docker-entrypoint-initdb.d/init.sql;
      echo 'CREATE DATABASE IF NOT EXISTS cms;' > /docker-entrypoint-initdb.d/init.sql;
      /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      "
    command: [ "--default-authentication-plugin=mysql_native_password" ]
    networks:
      - rallibau-net

  rabbitmq:
    container_name: rallibau-rabbitmq
    image: 'rabbitmq:3.7-management'
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=rallibau
      - RABBITMQ_DEFAULT_PASS=secreto
    networks:
      - rallibau-net
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    restart: unless-stopped
    container_name: elasticsearch
    ports: ['9200:9200']
    environment:
      - "ELASTIC_PASSWORD=elastic"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "discovery.type=single-node"
      - "TAKE_FILE_OWNERSHIP=1"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - './var/elasticsearch:/usr/share/elasticsearch/data'
    networks:
      - rallibau-net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.0
    restart: unless-stopped
    container_name: kibana
    environment:
      - "ELASTIC_PASSWORD=elastic"
    ports: [ '5601:5601' ]
    depends_on:
      - elasticsearch
    networks:
      - rallibau-net

  logstash:
    image: docker.elastic.co/logstash/logstash:7.12.1
    restart: unless-stopped
    container_name: logstash
    environment:
      - "ELASTIC_PASSWORD=elastic"
    ports: [ '9600:9600' ]
    depends_on: [ 'elasticsearch' ]
    volumes:
      - './etc/logstash/pipeline:/usr/share/logstash/pipeline'
      - './var/logs:/logs'
    networks:
      - rallibau-net
